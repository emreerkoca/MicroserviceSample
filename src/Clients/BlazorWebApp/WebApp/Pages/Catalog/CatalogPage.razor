@page "/catalog"
@using WebApp.Application.Services.Interfaces
@using WebApp.Components.Catalog.ProductView
@using WebApp.Domain.Models
@using WebApp.Domain.Models.CatalogModels
@using WebApp.Infrastructure

<div class="row">
	@if (model.Data != null && model.Data.Any())
	{
		foreach(var catalogItem in model.Data)
		{
			<ProductView CatalogItem="catalogItem" OnClick="()=>AddToCart(catalogItem)" />
		}
	}
</div>

@code {
	PaginatedItemsViewModel<CatalogItem> model = new PaginatedItemsViewModel<CatalogItem>();
	[Inject]
	ICatalogService _catalogService { get; set; }
	[Inject]
	IIdentityService _identityService { get; set; }
	[Inject]
    public IBasketService _basketService { get; set; }
	[Inject]
    NavigationManager navigationManager { get; set; }
	[Inject]
    AppStateManager appState { get; set; }

	protected async override Task OnInitializedAsync()
	{
		model = await _catalogService.GetCatalogItems();
	}

	public async Task AddToCart(CatalogItem catalogItem)
	{
		if (!_identityService.IsLoggedIn)
        {
            navigationManager.NavigateTo($"login?returnUrl={Uri.EscapeDataString(navigationManager.Uri)}", true);
            return;
        }

        await _basketService.AddItemToBasket(catalogItem.Id);
        appState.UpdateCart(this);
	}
}